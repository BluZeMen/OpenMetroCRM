# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2017-03-17 11:53
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified_datetime', models.DateTimeField(auto_now=True, help_text='Дата и время последнего изменения записи', verbose_name='Изменено')),
                ('created_datetime', models.DateTimeField(auto_now_add=True, help_text='Дата и время создания записи', verbose_name='Создано')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('patronymic', models.CharField(blank=True, max_length=32, null=True, verbose_name='Отчество')),
                ('gender', models.NullBooleanField(verbose_name='Пол')),
                ('mobile_phone', models.CharField(blank=True, max_length=14, null=True, verbose_name='Моб. теефон')),
                ('home_phone', models.CharField(blank=True, max_length=14, null=True, verbose_name='Домашний телефон')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars', verbose_name='Аватар')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'Контакт',
                'verbose_name_plural': 'Контакты',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Contractor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified_datetime', models.DateTimeField(auto_now=True, help_text='Дата и время последнего изменения записи', verbose_name='Изменено')),
                ('created_datetime', models.DateTimeField(auto_now_add=True, help_text='Дата и время создания записи', verbose_name='Создано')),
                ('name', models.CharField(max_length=64, verbose_name='Имя')),
                ('full_name', models.CharField(blank=True, max_length=256, null=True, verbose_name='Полное имя')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
            ],
            options={
                'verbose_name': 'Контрагент',
                'verbose_name_plural': 'Контрагенты',
            },
        ),
        migrations.CreateModel(
            name='ContractorType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified_datetime', models.DateTimeField(auto_now=True, help_text='Дата и время последнего изменения записи', verbose_name='Изменено')),
                ('created_datetime', models.DateTimeField(auto_now_add=True, help_text='Дата и время создания записи', verbose_name='Создано')),
                ('name', models.CharField(max_length=256, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Тип контрагента',
                'verbose_name_plural': 'Типы контрагентов',
            },
        ),
        migrations.CreateModel(
            name='InventoryNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified_datetime', models.DateTimeField(auto_now=True, help_text='Дата и время последнего изменения записи', verbose_name='Изменено')),
                ('created_datetime', models.DateTimeField(auto_now_add=True, help_text='Дата и время создания записи', verbose_name='Создано')),
                ('number', models.IntegerField(verbose_name='Номер')),
                ('holder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Держатель')),
            ],
            options={
                'verbose_name': 'Инвентарный номер',
                'verbose_name_plural': 'Инвентарные номера',
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified_datetime', models.DateTimeField(auto_now=True, help_text='Дата и время последнего изменения записи', verbose_name='Изменено')),
                ('created_datetime', models.DateTimeField(auto_now_add=True, help_text='Дата и время создания записи', verbose_name='Создано')),
                ('name', models.CharField(max_length=256, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('contractor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='personnel.Contractor', verbose_name='Контрагент')),
                ('holder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Держатель')),
            ],
            options={
                'verbose_name': 'Должность',
                'verbose_name_plural': 'Должности',
            },
        ),
        migrations.CreateModel(
            name='JobType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified_datetime', models.DateTimeField(auto_now=True, help_text='Дата и время последнего изменения записи', verbose_name='Изменено')),
                ('created_datetime', models.DateTimeField(auto_now_add=True, help_text='Дата и время создания записи', verbose_name='Создано')),
                ('name', models.CharField(max_length=256, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Тип должности',
                'verbose_name_plural': 'Типы должностей',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified_datetime', models.DateTimeField(auto_now=True, help_text='Дата и время последнего изменения записи', verbose_name='Изменено')),
                ('created_datetime', models.DateTimeField(auto_now_add=True, help_text='Дата и время создания записи', verbose_name='Создано')),
                ('name', models.CharField(max_length=256, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Местоположение',
                'verbose_name_plural': 'Местоположения',
            },
        ),
        migrations.AddField(
            model_name='job',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='personnel.Location', verbose_name='Местоположение'),
        ),
        migrations.AddField(
            model_name='job',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='personnel.JobType', verbose_name='Тип'),
        ),
        migrations.AddField(
            model_name='contractor',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='personnel.Location', verbose_name='Местоположение'),
        ),
        migrations.AddField(
            model_name='contractor',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='personnel.ContractorType', verbose_name='Тип'),
        ),
        migrations.AddField(
            model_name='contact',
            name='home_location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='personnel.Location', verbose_name='Место жительства'),
        ),
        migrations.AddField(
            model_name='contact',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
